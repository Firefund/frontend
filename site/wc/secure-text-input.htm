<link rel="import" href="/lib/polymer.html">

<dom-module id="f-secure-text-input">

	<template>
		<link rel="stylesheet" href="/css/blocks/f-text-input.css">
		<link rel="stylesheet" href="/css/blocks/f-button-basic.css">

		<form action="http://localhost:10420/openpgp.htm" method="POST">
			<input type="hidden" value="" id="secretFormSource" name="secretFormSource">
			<input type="hidden" value="fdsjkfdlsnfdsfjmdsvlr3hu3" name="hmac">
			<div class="f-text-input f-text-input_multiline">
				<label class="f-text-input__label">Message
					<textarea name="message" id="enctext" class="f-text-input__text-field" rows="6" placeholder="This is OpenPGP encrypted using the OpenPGP.js library"></textarea>
				</label>
			</div>
				<button id="enc_button" class="f-button-basic">Encrypt</button>
				<input type="submit" class="f-button-basic">
				<button id="dec_button" class="f-button-basic">Decrypt</button>
		</form>

		<div class="f-text-input f-text-input_multiline">
			<label class="f-text-input__label">Output
				<textarea id="encout" class="f-text-input__text-field" rows="6" placeholder="This is OpenPGP encrypted using the OpenPGP.js library"></textarea>
			</label>
		</div>

	</template>

	<script src="/lib/openpgp.min.js"></script>
	<script>
		Polymer({
			/* this is the element's prototype */
			is: 'f-secure-text-input',
			ready: function() {
// debugger;
				window.openpgp.initWorker({ path:"/lib/openpgp.worker.js" }) // set the relative web worker path
				// window.openpgp.config.aead_protect = true // activate fast AES-GCM mode (not yet OpenPGP standard)
				var public = openpgp.key.readArmored(this.secretSource).keys
console.log(public)
				var self = this
				this.$.enc_button.addEventListener("click", function(e) {
					e.preventDefault()
// console.log( self.$.enctext.value )
					openpgp.encrypt({
						publicKeys: public,
						data: self.$.enctext.value
					}).then(function(ciphertext) {
							encrypted = ciphertext.data; // '-----BEGIN PGP MESSAGE ... END PGP MESSAGE-----'
// console.log(encrypted)
							self.$.encout.value = encrypted
							self.$.secretFormSource.value = encrypted
					})
				})

				this.$.dec_button.addEventListener("click", function(e) {
					e.preventDefault();
					openpgp.decrypt({
						message: openpgp.message.readArmored(self.$.encout.value),
						publicKeys: public,    // for verification (optional)
						privateKey: openpgp.key.readArmored(self.superSecret).keys[0] // for decryption
					}).then(function(plaintext) {
						self.$.encout.value = plaintext.data
					})
				})
			}, superSecret: `-----BEGIN PGP PRIVATE KEY BLOCK-----
Version: GnuPG v1

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
=zG4v
-----END PGP PRIVATE KEY BLOCK-----
`
			, secretSource: `-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1

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
=nKgw
-----END PGP PUBLIC KEY BLOCK-----
`
		})
  </script>

</dom-module>
