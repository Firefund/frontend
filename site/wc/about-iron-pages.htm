<link rel="import" href="/lib/polymer.html">
<link rel="import" href="/lib/iron-resizable-behavior/iron-resizable-behavior.html">
<link rel="import" href="/lib/iron-selectable/iron-selectable.html">

<dom-module id="about-iron-pages"> <!-- Before: f-header -->
	<template>
	    <style>
			:host {
				display: block;
			}
			:host > ::content > :not(.iron-selected) {
				display: none !important;
			}
	    </style>

		<content>
		</content>

	</template>

	<script>
		(function() { // start of self invoking function (closure)

			function changePage(event) {
				// console.log(arguments)
				var selected = event.target // event is the click event / event.target is the button that is actually clicked
				// var selected = Polymer.dom(event).path.shift() // Polymer shitty way
				// debugger // this line will open devtools in the browser and stop js execution at exactly this line
				if(selected.name === "blog") // selected.name is the name of <button name="terms">Terms</button> in about-buttons.htm
					window.open("https://medium.com/@firefundnet/latest")
				else if(!selected.name) return
				else this.setAttribute("selected", selected.name)
				// console.log(this.selected) // print the value of <about-iron-pages selected="?">
			}
			var changeAboutPage // variable for a function with 'this' bound to about-iron-pages

			function hashPage(pageName) { //TODO: use the hash to change the page so we can link to a sub-about page
				window.location.hash = pageName
			}

	    Polymer({

	      is: 'about-iron-pages',

	      behaviors: [
	        Polymer.IronResizableBehavior,
	        Polymer.IronSelectableBehavior
	      ],

	      properties: {

	        // as the selected page is the only one visible, activateEvent
	        // is both non-sensical and problematic; e.g. in cases where a user
	        // handler attempts to change the page and the activateEvent
	        // handler immediately changes it back
	        activateEvent: {
	          type: String,
	          value: null,
	          notify: true,
	        }

	      },

	      listeners: [
	        '_selectedPageChanged(selected)'
	      ],

	      _selectedPageChanged: function(selected, old) {
	      	// console.log(selected)
	        this.async(this.notifyResize)
	      },

				attached: function() {
					// attach click event listener
					var buttonGroup = document.querySelector(".about-buttons")
					changeAboutPage = changePage.bind(this)
					buttonGroup.addEventListener("click", changeAboutPage, false)
				},

				detached: function() {
					// clean up event listener logic - saving memory and preventing memory leak
					var buttonGroup = document.querySelector(".about-buttons")
					buttonGroup.removeEventListener("click", changeAboutPage, false)
					firefund.changeAboutPage = null
				}
	    })
		}())  // end of self invoking function
	</script>
</dom-module>